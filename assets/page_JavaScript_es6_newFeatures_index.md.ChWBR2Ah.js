import{at as a,m as e,l as t,aS as r}from"./chunks/framework.DrfD3omv.js";const m=JSON.parse('{"title":"es6 新特性","description":"","frontmatter":{},"headers":[],"relativePath":"page/JavaScript/es6/newFeatures/index.md","filePath":"page/JavaScript/es6/newFeatures/index.md","lastUpdated":1724122316000}'),o={name:"page/JavaScript/es6/newFeatures/index.md"},i=r('<h1 id="es6-新特性" tabindex="-1">es6 新特性 <a class="header-anchor" href="#es6-新特性" aria-label="Permalink to &quot;es6 新特性&quot;">​</a></h1><h2 id="_1-变量声明-let-const" tabindex="-1">1. 变量声明 let/const <a class="header-anchor" href="#_1-变量声明-let-const" aria-label="Permalink to &quot;1. 变量声明 let/const&quot;">​</a></h2><h2 id="_2-箭头函数" tabindex="-1">2. 箭头函数 <a class="header-anchor" href="#_2-箭头函数" aria-label="Permalink to &quot;2. 箭头函数&quot;">​</a></h2><h2 id="_3-模板字符串" tabindex="-1">3. 模板字符串 <a class="header-anchor" href="#_3-模板字符串" aria-label="Permalink to &quot;3. 模板字符串&quot;">​</a></h2><h2 id="_4-解构赋值" tabindex="-1">4. 解构赋值 <a class="header-anchor" href="#_4-解构赋值" aria-label="Permalink to &quot;4. 解构赋值&quot;">​</a></h2><h2 id="_5-扩展运算符" tabindex="-1">5. 扩展运算符 <a class="header-anchor" href="#_5-扩展运算符" aria-label="Permalink to &quot;5. 扩展运算符&quot;">​</a></h2><h2 id="_6-剩余参数" tabindex="-1">6. 剩余参数 <a class="header-anchor" href="#_6-剩余参数" aria-label="Permalink to &quot;6. 剩余参数&quot;">​</a></h2><h2 id="_7-类" tabindex="-1">7. 类 <a class="header-anchor" href="#_7-类" aria-label="Permalink to &quot;7. 类&quot;">​</a></h2><h2 id="_8-模块化" tabindex="-1">8. 模块化 <a class="header-anchor" href="#_8-模块化" aria-label="Permalink to &quot;8. 模块化&quot;">​</a></h2><h2 id="_9-promise" tabindex="-1">9. promise <a class="header-anchor" href="#_9-promise" aria-label="Permalink to &quot;9. promise&quot;">​</a></h2><h2 id="_10-map-set" tabindex="-1">10. map/set <a class="header-anchor" href="#_10-map-set" aria-label="Permalink to &quot;10. map/set&quot;">​</a></h2><h2 id="_11-symbol" tabindex="-1">11. symbol <a class="header-anchor" href="#_11-symbol" aria-label="Permalink to &quot;11. symbol&quot;">​</a></h2><h2 id="_12-迭代器和生成器" tabindex="-1">12. 迭代器和生成器 <a class="header-anchor" href="#_12-迭代器和生成器" aria-label="Permalink to &quot;12. 迭代器和生成器&quot;">​</a></h2><h2 id="_13-object-的新方法" tabindex="-1">13. object 的新方法 <a class="header-anchor" href="#_13-object-的新方法" aria-label="Permalink to &quot;13. object 的新方法&quot;">​</a></h2><p>在 ES6 中，添加了 Object.is()、Object.assign()、Object.keys()、Object.values()、Object.entries()等方法。</p><h2 id="_14-数组的新方法" tabindex="-1">14. 数组的新方法 <a class="header-anchor" href="#_14-数组的新方法" aria-label="Permalink to &quot;14. 数组的新方法&quot;">​</a></h2><p>在 ES6 中，添加了 Array.from()、includes()、map()、filter()、reduce()、find()、some()、every()等方法。</p>',17),s=[i];function l(h,n,d,c,_,b){return t(),e("div",null,s)}const p=a(o,[["render",l]]);export{m as __pageData,p as default};
